Task 2: 28-Oct-2024
Book Club Management System using TypeScript Enums

Objective:
You are building a management tool for a book club where members meet regularly to discuss different types of books. Each book is categorized by genre,
and each member has a role within the club. You’ll use TypeScript enums to organize these aspects and ensure consistency in handling data.

Requirements:
1. Define Enums:
   • Create an enum called BookGenre with the following values:
      • FICTION
      • NON_FICTION
      • MYSTERY
      • SCIENCE_FICTION
      • BIOGRAPHY
      • FANTASY
  • Create another enum called MemberRole with the following values:
      • ORGANIZER
      • MODERATOR
      • MEMBER
      • GUEST
     
2. Model the Book and Member:
   • Define a Book type that includes:
     • title: The title of the book (string)
     • author: The author of the book (string)
     • genre: The genre of the book (use the BookGenre enum)
  • Define a Member type that includes:
    • name: The member’s name (string)
    • role: The role of the member in the book club (use the MemberRole enum)

3. Implement Functions:
• Write a function getBooksByGenre that accepts a list of Book objects and a BookGenre value. The function should return only the books that match the specified genre.
• Write a function getMembersByRole that accepts a list of Member objects and a MemberRole value. The function should return only the members who have the specified role.
• Write a function countBooksByGenre that takes a list of Book objects and returns an object summarizing the count of each genre.

Expected Output:
• getBooksByGenre(books, BookGenre.FICTION) should return books that are in the Fiction genre.
• getMembersByRole(members, MemberRole.MEMBER) should return the list of members with the role of "MEMBER".
• countBooksByGenre(books) should return an object, such as { FICTION: 1, NON_FICTION: 1, SCIENCE_FICTION: 1, FANTASY: 1 }.